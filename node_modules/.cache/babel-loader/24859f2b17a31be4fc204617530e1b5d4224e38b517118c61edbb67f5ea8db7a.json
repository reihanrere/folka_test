{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { loginUser } from \"../../actions/auth/login\";\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    token: null,\n    isLoading: false,\n    isSuccess: false,\n    errorMessage: \"\"\n  },\n  reducers: {\n    logoutUser: state => {\n      state.token = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(loginUser.pending, state => {\n      state.isLoading = true;\n    }).addCase(loginUser.fulfilled, (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.token = payload;\n    }).addCase(loginUser.rejected, (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.errorMessage = payload;\n    });\n  }\n});\nexport const {\n  logoutUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","loginUser","authSlice","name","initialState","token","isLoading","isSuccess","errorMessage","reducers","logoutUser","state","extraReducers","builder","addCase","pending","fulfilled","_ref","payload","rejected","_ref2","actions","reducer"],"sources":["/Users/reihanrenaldi/Documents/ReihanSigma/projects/react-projects/folka_test/src/redux/features/auth/loginSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { loginUser } from \"../../actions/auth/login\";\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState: {\n    token: null,\n    isLoading: false,\n    isSuccess: false,\n    errorMessage: \"\",\n  },\n  reducers: {\n    logoutUser: (state) => {\n      state.token = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loginUser.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(loginUser.fulfilled, (state, { payload }) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.token = payload;\n      })\n      .addCase(loginUser.rejected, (state, { payload }) => {\n        state.isLoading = false;\n        state.isSuccess = false;\n        state.errorMessage = payload;\n      });\n  },\n});\n\nexport const { logoutUser } = authSlice.actions;\nexport default authSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MAAM;EACZC,YAAY,EAAE;IACZC,KAAK,EAAE,IAAI;IACXC,SAAS,EAAE,KAAK;IAChBC,SAAS,EAAE,KAAK;IAChBC,YAAY,EAAE;EAChB,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,KAAK,GAAG,IAAI;IACpB;EACF,CAAC;EACDO,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACb,SAAS,CAACc,OAAO,EAAGJ,KAAK,IAAK;MACrCA,KAAK,CAACL,SAAS,GAAG,IAAI;IACxB,CAAC,CAAC,CACDQ,OAAO,CAACb,SAAS,CAACe,SAAS,EAAE,CAACL,KAAK,EAAAM,IAAA,KAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC,GAAAD,IAAA;MAC/CN,KAAK,CAACL,SAAS,GAAG,KAAK;MACvBK,KAAK,CAACJ,SAAS,GAAG,IAAI;MACtBI,KAAK,CAACN,KAAK,GAAGa,OAAO;IACvB,CAAC,CAAC,CACDJ,OAAO,CAACb,SAAS,CAACkB,QAAQ,EAAE,CAACR,KAAK,EAAAS,KAAA,KAAkB;MAAA,IAAhB;QAAEF;MAAQ,CAAC,GAAAE,KAAA;MAC9CT,KAAK,CAACL,SAAS,GAAG,KAAK;MACvBK,KAAK,CAACJ,SAAS,GAAG,KAAK;MACvBI,KAAK,CAACH,YAAY,GAAGU,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAER;AAAW,CAAC,GAAGR,SAAS,CAACmB,OAAO;AAC/C,eAAenB,SAAS,CAACoB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}