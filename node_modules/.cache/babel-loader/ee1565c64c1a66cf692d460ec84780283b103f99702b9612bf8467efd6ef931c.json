{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { registerUser } from \"../../actions/auth/register\";\nconst registerSlice = createSlice({\n  name: \"register\",\n  initialState: {\n    isLoading: false,\n    isSuccess: false,\n    errorMessage: \"\"\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(registerUser.pending, state => {\n      state.isLoading = true;\n      state.isSuccess = false;\n      state.errorMessage = \"\";\n    }).addCase(registerUser.fulfilled, state => {\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.errorMessage = \"\";\n    }).addCase(registerUser.rejected, (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.isLoading = false;\n      state.isSuccess = false;\n      state.errorMessage = payload;\n    });\n  }\n});\nexport default registerSlice.reducer;","map":{"version":3,"names":["createSlice","registerUser","registerSlice","name","initialState","isLoading","isSuccess","errorMessage","reducers","extraReducers","builder","addCase","pending","state","fulfilled","rejected","_ref","payload","reducer"],"sources":["/Users/reihanrenaldi/Documents/ReihanSigma/projects/react-projects/folka_test/src/redux/features/auth/registerSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { registerUser } from \"../../actions/auth/register\";\n\nconst registerSlice = createSlice({\n  name: \"register\",\n  initialState: {\n    isLoading: false,\n    isSuccess: false,\n    errorMessage: \"\",\n  },\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(registerUser.pending, (state) => {\n        state.isLoading = true;\n        state.isSuccess = false;\n        state.errorMessage = \"\";\n      })\n      .addCase(registerUser.fulfilled, (state) => {\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.errorMessage = \"\";\n      })\n      .addCase(registerUser.rejected, (state, { payload }) => {\n        state.isLoading = false;\n        state.isSuccess = false;\n        state.errorMessage = payload;\n      });\n  },\n});\n\nexport default registerSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,6BAA6B;AAE1D,MAAMC,aAAa,GAAGF,WAAW,CAAC;EAChCG,IAAI,EAAE,UAAU;EAChBC,YAAY,EAAE;IACZC,SAAS,EAAE,KAAK;IAChBC,SAAS,EAAE,KAAK;IAChBC,YAAY,EAAE;EAChB,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACV,YAAY,CAACW,OAAO,EAAGC,KAAK,IAAK;MACxCA,KAAK,CAACR,SAAS,GAAG,IAAI;MACtBQ,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,YAAY,GAAG,EAAE;IACzB,CAAC,CAAC,CACDI,OAAO,CAACV,YAAY,CAACa,SAAS,EAAGD,KAAK,IAAK;MAC1CA,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACP,SAAS,GAAG,IAAI;MACtBO,KAAK,CAACN,YAAY,GAAG,EAAE;IACzB,CAAC,CAAC,CACDI,OAAO,CAACV,YAAY,CAACc,QAAQ,EAAE,CAACF,KAAK,EAAAG,IAAA,KAAkB;MAAA,IAAhB;QAAEC;MAAQ,CAAC,GAAAD,IAAA;MACjDH,KAAK,CAACR,SAAS,GAAG,KAAK;MACvBQ,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,YAAY,GAAGU,OAAO;IAC9B,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAef,aAAa,CAACgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}