{"ast":null,"code":"var _s = $RefreshSig$();\nimport axios from \"axios\";\nconst axiosInstance = axios.create({\n  baseURL: \"https://techtest.folkatech.com/api\"\n});\n_s(axiosInstance.interceptors.request.use(_s(config => {\n  _s();\n  // Ambil token dari Redux state\n  const token = useSelector(state => state.auth.token);\n\n  // Jika token tersedia, tambahkan header Authorization\n  if (token) {\n    config.headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n  return config;\n}, \"bD5+gKbiITcJRDYAIJK4ZSEgato=\", true), error => {\n  return Promise.reject(error);\n}), \"bD5+gKbiITcJRDYAIJK4ZSEgato=\", true);\nexport default axiosInstance;","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","_s","interceptors","request","use","config","token","useSelector","state","auth","headers","error","Promise","reject"],"sources":["/Users/reihanrenaldi/Documents/ReihanSigma/projects/react-projects/folka_test/src/utils/axiosConfig.js"],"sourcesContent":["import axios from \"axios\";\n\nconst axiosInstance = axios.create({\n  baseURL: \"https://techtest.folkatech.com/api\",\n});\n\naxiosInstance.interceptors.request.use(\n  (config) => {\n    // Ambil token dari Redux state\n    const token = useSelector((state) => state.auth.token);\n\n    // Jika token tersedia, tambahkan header Authorization\n    if (token) {\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\nexport default axiosInstance;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,aAAa,GAAGD,KAAK,CAACE,MAAM,CAAC;EACjCC,OAAO,EAAE;AACX,CAAC,CAAC;AAEFC,EAAA,CAAAH,aAAa,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAAAH,EAAA,CACnCI,MAAM,IAAK;EAAAJ,EAAA;EACV;EACA,MAAMK,KAAK,GAAGC,WAAW,CAAEC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACH,KAAK,CAAC;;EAEtD;EACA,IAAIA,KAAK,EAAE;IACTD,MAAM,CAACK,OAAO,CAAC,eAAe,CAAC,GAAI,UAASJ,KAAM,EAAC;EACrD;EAEA,OAAOD,MAAM;AACf,CAAC,yCACAM,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeb,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}